{"version":3,"file":"static/js/381.2c3eb76b.chunk.js","mappings":"6OAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,uFACcH,EAAAA,EAAAA,IAAA,gBAAmBG,EAAnB,oBAAiCF,IAD/C,cACCG,EADD,yBAEEA,EAAKC,MAFP,kE,8DCFMC,EAAMC,EAAAA,GAAAA,IAAH,wDAIHC,EAAaD,EAAAA,GAAAA,IAAH,6FAOVE,EAAeF,EAAAA,GAAAA,IAAH,8CAIZG,GAAYH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,wCAITK,EAAOL,EAAAA,GAAAA,GAAH,gDAGJM,EAAKN,EAAAA,GAAAA,GAAH,2CAIFO,GAAUP,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,+I,SCuDpB,EAtEqB,WAEnB,OAAkCQ,EAAAA,EAAAA,UAAS,CAAC,GAA5C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACF,GAA0CJ,EAAAA,EAAAA,UAAS,CAAC,GAApD,eAAOK,EAAP,KAAsBC,EAAtB,KAEQC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MA4BjB,OAvBFC,EAAAA,EAAAA,YAAU,WAIc,OAAnBF,EAASG,OAFVN,EAAiBG,EAASG,MAM7B,GAAC,CAACH,EAASG,SAEVD,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEsBxB,EAAiBoB,EAAOnB,IAF9C,OAEUyB,EAFV,OAGIX,EAAaW,GACbT,EAAUS,EAAIV,QAJlB,gDAMIW,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACT,EAAOnB,MAGT,UAAC,IAAD,YAEE,SAACW,EAAD,CAASkB,GAAIZ,EAAb,SAA4B,UAC5B,UAACd,EAAD,YACE,gBACA2B,IAAI,SACFC,IACElB,EAAUmB,YAAV,0CACuCnB,EAAUmB,aAC7C,0IAGR,4BACE,SAACvB,EAAD,UAAOI,EAAUoB,SACjB,yBAAG,cAAYpB,EAAUqB,iBACzB,SAACxB,EAAD,UAAI,cACJ,uBAAIG,EAAUsB,YACd,SAACzB,EAAD,UAAI,YACJ,uBAAIK,EAAOqB,KAAI,SAAAC,GAAI,OAAIA,EAAKC,IAAT,IAAeC,KAAK,eAG3C,UAACjC,EAAD,YAEE,wBAAI,6BACJ,UAACD,EAAD,YACE,SAACE,EAAD,CAAWsB,GAAI,OAAf,SAAyB,YACzB,SAACtB,EAAD,CAAWsB,GAAI,UAAf,SAA0B,mBAG9B,SAAC,KAAD,MAGL,C","sources":["apiMovieId.js","components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '7014ff3481c4736f473f368d478f8f78';\n\nexport async function searchMovieForId(id) {\n  const resp = await axios.get(`movie/${id}?api_key=${API_KEY}`);\n  return resp.data;\n}\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  gap: 16px;\n`;\nexport const DivWrraper = styled.div`\n  margin-top: 16px;\n  :first-child {\n    margin-right: 16px;\n  }\n`;\n\nexport const DivContainer = styled.div`\n  padding-top: 16px;\n`;\n\nexport const StyleLink = styled(Link)`\n  color: blue;\n`;\n\nexport const Film = styled.h1`\n  margin-bottom: 16px;\n`;\nexport const H3 = styled.h3`\n  margin: 12px 0;\n`;\n\nexport const BtnBack = styled(Link)`\ndisplay:inline-block;\nheight: 30px;\nwidth: 45px;\npadding: 5px;\nmargin-bottom:10px;\nbackground:blue;\ncolor:white\n`","import {   Outlet, useLocation, useParams } from 'react-router-dom';\nimport { searchMovieForId } from 'apiMovieId';\nimport { useEffect, useState } from 'react';\nimport { Container } from 'components/Container.styled';\nimport {\n  BtnBack,\n  Div,\n  DivContainer,\n  DivWrraper,\n  Film,\n  H3,\n  StyleLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  \n  const [movieInfo, setMovieInfo] = useState({});\n  const [genres, setGenres] = useState([]);\nconst [locationState, setLocationState] = useState({});\n\n  const params = useParams();\n  const location = useLocation()\n\n\n\n\nuseEffect(()=>{\n  const f = ()=>{\n    setLocationState(location.state)\n  };\n  if(location.state === null ){\n    return\n  }\n  f()\n},[location.state])\n\n  useEffect(() => {\n    async function search() {\n      try {\n        const arr = await searchMovieForId(params.id);\n        setMovieInfo(arr);\n        setGenres(arr.genres);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    search();\n  }, [params.id]);\n\n  return (\n    <Container>\n\n      <BtnBack to={locationState}>Back</BtnBack>\n      <Div>\n        <img\n        alt='poster'\n          src={\n            movieInfo.poster_path\n              ? `https://image.tmdb.org/t/p/w400/${movieInfo.poster_path}`\n              : 'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQQp9IN56pUVBHlFatrKgEmqdERoeNhH1QQn7W0_8oRboIG62du-jaOroFWjHt0UAz21SU&usqp=CAU'\n          }\n        />\n        <div>\n          <Film>{movieInfo.title}</Film>\n          <p>User score:{movieInfo.vote_average}</p>\n          <H3>Overview</H3>\n          <p>{movieInfo.overview}</p>\n          <H3>Genres</H3>\n          <p>{genres.map(item => item.name).join(', ')}</p>\n        </div>\n      </Div>\n      <DivContainer>\n      \n        <h3>Additional information:</h3>\n        <DivWrraper>\n          <StyleLink to={'cast'}  >Actors</StyleLink>\n          <StyleLink to={'reviews'}>Reviews</StyleLink>\n        </DivWrraper>\n      </DivContainer>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","API_KEY","searchMovieForId","id","resp","data","Div","styled","DivWrraper","DivContainer","StyleLink","Link","Film","H3","BtnBack","useState","movieInfo","setMovieInfo","genres","setGenres","locationState","setLocationState","params","useParams","location","useLocation","useEffect","state","arr","console","log","search","to","alt","src","poster_path","title","vote_average","overview","map","item","name","join"],"sourceRoot":""}